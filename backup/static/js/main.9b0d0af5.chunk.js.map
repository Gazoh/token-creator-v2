{"version":3,"sources":["assets/images/nerd-finance-logo.svg","assets/images/uniswap.svg","assets/images/dfo.svg","components/Table/MainTableRow/MainTableRow.tsx","helpers/icons.ts","services/MainCalls.ts","shared/functions.ts","components/Utils/Image/Image.tsx","components/Table/MainTable/MainTable.tsx","components/Table/Table/Table.tsx","components/Utils/Button/Button.tsx","components/Utils/Uploader/Uploader.tsx","containers/Home/HomeHelper.ts","providers/web3.ts","components/CustomModal/CustomModal.tsx","components/SocialLinks/SocialLinks.tsx","components/Footer/Footer.tsx","containers/Home/Home.tsx","actions/Global.tsx","containers/Main/Main.tsx","helpers/History.ts","reducers/Global.tsx","index.tsx"],"names":["module","exports","MainTableRow","props","className","row","map","header","key","id","label","icons","image","fa","copy","twitter","fab","discord","telegram","setTokenList","data","a","process","fetch","method","headers","body","JSON","stringify","res","console","log","generateMyTokenList","tokenList","validator","Ajv","myList","validateSchema","schema","validate","errors","length","notify","baseText","text","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","Image","useState","imageIsLoaded","setImageIsLoaded","src","onError","e","checkImage","alt","icon","configure","MainTable","useEffect","tokens","token","Math","random","logoURI","name","onClick","symbol","address","target","rel","href","tokenAdress","Table","Button","type","children","Uploader","getFile","upload","document","getElementById","addEventListener","reader","FileReader","result","parse","checkList","error","push","dataPath","keyword","message","errorHandler","readAsText","files","arr","buttonClass","fileInput","click","buttonTxt","accept","tableHeader","connectWeb3","fallback","providerFallback","ethereum","window","web3","enable","Web3","currentProvider","providers","HttpProvider","getAccounts","callback","eth","getChainID","number","accounts","balanceOf","chainID","abi","ERC_20_ABI","Contract","methods","call","then","bal","currentBalance","utils","fromWei","CustomModal","override","css","Modal","show","Header","Title","title","Body","showSpinner","size","color","loading","description","showTelegramText","Footer","extraBtnClass","onClose","btnText","showBuyButton","showBuyButtonText","SocialLinks","Uniswap","DFO","balance","Date","getFullYear","connect","state","globalReducer","dispatch","getTokenList","getState","json","payload","setBalance","modal","showModal","connected","setConnection","errorUploader","setUploaderError","maxNerd","checkConnected","account","chain","Logo","moment","timestamp","format","Main","path","render","createMemoryHistory","initialState","middleware","ReduxThunk","allReducers","combineReducers","action","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","history","History"],"mappings":"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","file":"static/js/main.9b0d0af5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/nerd-finance-logo.9fd700fa.svg\";","module.exports = __webpack_public_path__ + \"static/media/uniswap.0876893c.svg\";","module.exports = __webpack_public_path__ + \"static/media/dfo.598c23f5.svg\";","import React from 'react'\r\n\r\ninterface Props {\r\n    row: Array<any>\r\n}\r\n\r\nfunction MainTableRow(props: Props) {\r\n\r\n    return (\r\n        <div className=\"table-row table-header\">\r\n            {props.row.map(header => {\r\n                return <div key={header.id} className=\"table-col\">\r\n                    {header.label}\r\n                </div>\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainTableRow\r\n","import * as fa from '@fortawesome/pro-regular-svg-icons'\r\nimport * as fab from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nexport const icons = {\r\n    image: fa.faImage,\r\n    copy: fa.faCopy,\r\n    twitter: fab.faTwitter,\r\n    discord: fab.faDiscord,\r\n    telegram: fab.faTelegram\r\n};\r\n","export const setTokenList = async (data: any) => {\r\n    try {\r\n        const url = process.env.REACT_APP_PLAY + 'upload.php'\r\n        const res = await fetch(url, {\r\n            method: \"POST\",\r\n            headers: {\r\n                'content-type': 'multipart/form-data'\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n        console.log(res);\r\n        return res;\r\n    }\r\n    catch (err) {\r\n        console.log(\"Failed to upload token list to server\", err)\r\n        return null;\r\n    }\r\n}","// @Uniswap\r\nimport { TokenList, schema } from '@uniswap/token-lists'\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n// @Custom imports\r\nimport Ajv from 'ajv';\r\nimport { setTokenList } from '../services/MainCalls';\r\n\r\nexport const generateMyTokenList = async (tokenList: TokenList) => {\r\n    // Creating a new AJV object\r\n    const validator = new Ajv();\r\n    // Tokenlist\r\n    const myList = tokenList;\r\n    // Validating if the scheme is a valid scheme\r\n    const validateScheme = validator.validateSchema(schema);\r\n    // If the validateScheme returns true it is a valid scheme than validate my list\r\n    if (validateScheme) {\r\n        validator.validate(schema, myList);\r\n        // Array of errors\r\n        let errors = validator.errors;\r\n        if(errors && errors.length > 0) {\r\n            return errors;\r\n        } else {\r\n            await setTokenList(myList)\r\n        }\r\n    }\r\n}\r\n\r\nexport const notify = (baseText: string, text: string) => {\r\n    toast.success(baseText + text, {\r\n        position: \"bottom-center\",\r\n        autoClose: 2000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        });\r\n}","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { icons } from '../../../helpers/icons';\r\n\r\ninterface Props {\r\n    src: string;\r\n    alt?: string;\r\n}\r\n\r\nfunction Image(props: Props) {\r\n    const [imageIsLoaded, setImageIsLoaded] = useState(true);\r\n\r\n    const checkImage = (e: any) => {\r\n        if (e) {\r\n            setImageIsLoaded(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {imageIsLoaded && props.src !== \"\" && props.src !== undefined ?\r\n                <img id={props.src} src={props.src} onError={(e) => checkImage(e)} alt={props.alt ? props.alt : 'image'} /> :\r\n                // Fallback\r\n                <div className='icon-box-sm'><FontAwesomeIcon icon={icons.image} /></div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Image\r\n","import React, { useEffect } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { icons } from '../../../helpers/icons';\r\nimport { toast } from 'react-toastify';\r\nimport { notify } from '../../../shared/functions';\r\nimport Image from '../../Utils/Image/Image';\r\nimport CopyToClipboard from 'react-copy-to-clipboard';\r\n\r\ninterface Props {\r\n    tokens: Array<any>\r\n}\r\n\r\ntoast.configure();\r\n\r\nfunction MainTable(props: Props) {\r\n    let baseToastText = 'Copied: ';\r\n\r\n    useEffect(() => { }, [props.tokens])\r\n\r\n    const generateUniswapLink = (tokenAdress: string) => {\r\n        const defaultUrl = 'https://info.uniswap.org/token/';\r\n        return defaultUrl + tokenAdress;\r\n    }\r\n\r\n    return (\r\n        <div className=\"table-main\">\r\n            {props.tokens.map(token => {\r\n                return <div key={Math.random()} className=\"table-row\">\r\n                    <CopyToClipboard text={token.logoURI}>\r\n                        <div className=\"table-col table-img\">\r\n                            <Image src={token.logoURI} alt='' />\r\n                        </div>\r\n                    </CopyToClipboard>\r\n                    <CopyToClipboard text={token.name}><div className=\"table-col\" onClick={() => notify(baseToastText, token.name)}>{token.name}</div></CopyToClipboard>\r\n                    <CopyToClipboard text={token.symbol}><div className=\"table-col\" onClick={() => notify(baseToastText, token.symbol)}>{token.symbol}</div></CopyToClipboard>\r\n                    <CopyToClipboard text={token.address}><div className=\"table-col\" onClick={() => notify(baseToastText, token.address)}>{token.address}</div></CopyToClipboard>\r\n                    <CopyToClipboard text={token.address}><div className=\"table-col\" onClick={() => notify(baseToastText, token.address)}><span className='icon-box-sm copy'><FontAwesomeIcon icon={icons.copy} /></span></div></CopyToClipboard>\r\n                    <div className=\"table-col\"><a target='_blank' rel=\"noopener noreferrer\" href={generateUniswapLink(token.address)}>Go to Uniswap</a></div>\r\n                </div>\r\n            })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainTable\r\n","import React from 'react'\r\nimport './Table.scss'\r\nimport MainTableRow from '../MainTableRow/MainTableRow'\r\nimport MainTable from '../MainTable/MainTable'\r\n\r\ninterface Props {\r\n    header: Array<any>,\r\n    tokens: any\r\n}\r\n\r\nfunction Table(props: Props) {\r\n    return (\r\n        <>\r\n            <MainTableRow row={props.header}/>\r\n            <MainTable tokens={props.tokens}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Table\r\n","import React from 'react';\r\n\r\ninterface Props {\r\n    children: React.ReactNode,\r\n    type?: 'button' | 'submit' | 'reset',\r\n    className?: string,\r\n    onClick?: Function\r\n}\r\n\r\nfunction Button(props: Props) {\r\n\r\n    return (\r\n        <>\r\n            <button onClick={() => props.onClick ? props.onClick() : null} className={props.className} type={props.type}>{props.children}</button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Button\r\n","import React, { useEffect, useState } from 'react';\r\n// @Custom imports\r\nimport { generateMyTokenList, notify } from '../../../shared/functions';\r\nimport Button from '../Button/Button';\r\n\r\ninterface Props {\r\n    accept: '.json',\r\n    buttonTxt: string,\r\n    buttonClass: string\r\n    onError: Function\r\n}\r\n\r\nfunction Uploader(props: Props) {\r\n    const [err, setError] = useState([])\r\n\r\n    useEffect(() => {\r\n        getFile()\r\n    }, [])\r\n\r\n    const getFile = () => {\r\n        const upload = document.getElementById('fileInput');\r\n        const baseToastText = 'Successfully uploaded token list, refresh your page';\r\n        // Make sure the DOM element exists\r\n        if (upload) {\r\n            upload.addEventListener('change', function () {\r\n                const reader = new FileReader(); // File reader to read the file \r\n                if (reader) {\r\n                    // This event listener will happen when the reader has read the file\r\n                    reader.addEventListener('load', async function () {\r\n                        // @ts-ignore\r\n                        const result = JSON.parse(reader.result); // Parse the result into an object\r\n                        // Validate the json\r\n                        const checkList = await generateMyTokenList(result);\r\n                        // Getting the errors of the generated tokenlist\r\n                        if (checkList !== undefined) {\r\n                            const error = checkList[0]\r\n                            // array of errors\r\n                            const errors = [];\r\n                            errors.push(error.dataPath, error.keyword, error.message)\r\n                            // Handle errors;\r\n                            console.log(error)\r\n                            errorHandler(errors)\r\n                        } else {\r\n                            notify(baseToastText, '')\r\n                        }\r\n                    });\r\n                    // @ts-ignore\r\n                    reader.readAsText(upload.files[0]); // Read the uploaded file\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    const errorHandler = (arr: any) => {\r\n        if(props.onError) props.onError(arr)\r\n    }\r\n\r\n    const onClick = () => {\r\n        const fileInput = document.getElementById('fileInput');\r\n        if (fileInput) {\r\n            fileInput.click();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Button className={props.buttonClass} onClick={() => onClick()}>{props.buttonTxt}</Button>\r\n            <input type=\"file\" id=\"fileInput\" accept={props.accept} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Uploader\r\n","export const tableHeader = [\r\n    {\r\n        id: 'ICON',\r\n        label: 'Icon',\r\n    },\r\n    {\r\n        id: 'TOKENNAME',\r\n        label: 'Token Name',\r\n    },\r\n    {\r\n        id: 'SYMBOL',\r\n        label: 'Symbol',\r\n    },\r\n    {\r\n        id: 'ADRESS',\r\n        label: 'Adress',\r\n    },\r\n    {\r\n        id: 'COPY_ADRESS',\r\n        label: 'Copy Adress',\r\n    },\r\n    {\r\n        id: 'UNISWAP',\r\n        label: 'Uniswap',\r\n    }\r\n]","import Web3 from 'web3';\r\nimport ERC_20_ABI from '../assets/objects/abi.json';\r\n\r\nexport const connectWeb3 = async (fallback?: any, onError?: Function) => {\r\n    try {\r\n        const providerFallback = process.env.REACT_APP_WEB3_PROVIDER_FALLBACK ? process.env.REACT_APP_WEB3_PROVIDER_FALLBACK : 'http://localhost:3000/';\r\n        // @ts-ignore \r\n        const ethereum = window.ethereum;\r\n        // @ts-ignore \r\n        let web3 = window.web3;\r\n        if (typeof ethereum !== 'undefined') {\r\n            await ethereum.enable();\r\n            web3 = new Web3(ethereum);\r\n        } else if (typeof web3 !== 'undefined') {\r\n            web3 = new Web3(web3.currentProvider);\r\n        } else {\r\n            web3 = new Web3(new Web3.providers.HttpProvider(providerFallback));\r\n        }\r\n        if (fallback) fallback(web3)\r\n    } catch {\r\n        if (onError) onError()\r\n    }\r\n}\r\n\r\n/**\r\n * Get current account chain ID's\r\n * @param callback returns result of account else console.logs an error\r\n */\r\nexport const getAccounts = async (callback: Function) => {\r\n    // @ts-ignore \r\n    let web3 = window.web3;\r\n    await web3.eth.getAccounts((error: any, result: any) => {\r\n        if (error) {\r\n            console.log('error', error);\r\n        } else {\r\n            callback(result);\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * Get current account chain ID\r\n * @param number return array number of the current account you want\r\n * @param fallback return chainID\r\n */\r\nexport const getChainID = (number: number = 0, fallback: Function) => {\r\n    getAccounts((accounts: any) => {\r\n        fallback(accounts[number])\r\n    })\r\n}\r\n\r\n/**\r\n * Get balance of chainID\r\n * @param chainID return chainID in order to get the balance of the given param(s);\r\n * @param fallback returns balance\r\n */\r\nexport const balanceOf = async (chainID: any, fallback?: Function) => {\r\n    try {\r\n        connectWeb3((web3: any) => {\r\n            let abi = ERC_20_ABI;\r\n            let tokenChainID = '0x2dC7b857772A4Ef7F9f39A88048F15374e4de161';\r\n            let tokenContract = new web3.eth.Contract(abi, tokenChainID);\r\n            tokenContract.methods.balanceOf(chainID).call().then(function (bal: any) {\r\n                const currentBalance = web3.utils.fromWei(bal, 'ether');\r\n                if (fallback) fallback(currentBalance);\r\n            })\r\n        });\r\n    } catch {\r\n        console.log('nope')\r\n    }\r\n}","import React from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\nimport { HashLoader } from 'react-spinners';\r\nimport { css } from \"@emotion/core\";\r\nimport Button from '../Utils/Button/Button';\r\n\r\ninterface Props {\r\n    title: string,\r\n    description: string,\r\n    btnText: string,\r\n    showSpinner?: boolean,\r\n    extraBtnClass?: boolean,\r\n    showBuyButton?: boolean,\r\n    showTelegramText?: boolean,\r\n    showBuyButtonText?: string,\r\n    show: boolean,\r\n    onClose: Function\r\n}\r\n\r\nfunction CustomModal(props: Props) {\r\n    const override = css`\r\n    margin-bottom: 24px;\r\n  `;\r\n\r\n    return (\r\n        <>\r\n            <Modal show={props.show} >\r\n                <Modal.Header>\r\n                    <Modal.Title>{props.title}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {props.showSpinner\r\n                        ?\r\n                        <HashLoader\r\n                            size={48}\r\n                            css={override}\r\n                            color={\"#fd6d52\"}\r\n                            loading={true}\r\n                        />\r\n                        :\r\n                        <></>\r\n                    }\r\n                    {props.description} {props.showTelegramText ? <a className='main-color-txt' href='https://t.me/joinchat/SM6jvB0FNmlz2t_KX8uYDg'>Telegram Channel link</a> : <></>}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <div className={props.extraBtnClass ? 'modal-footer-custom one-button' : 'modal-footer-custom'}>\r\n                        <Button className='button' onClick={() => props.onClose()}>{props.btnText}</Button>\r\n                        {props.showBuyButton ? <Button className='button'><a target='_blank' href='https://info.uniswap.org/pair/0x2e231cbf03ea19f8a5bed1c053e678729703d0ba'>{props.showBuyButtonText}</a></Button> : <></>}\r\n                    </div>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CustomModal\r\n","import React, { useEffect } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { icons } from '../../helpers/icons';\r\nimport Uniswap from '../../assets/images/uniswap.svg'\r\nimport DFO from '../../assets/images/dfo.svg';\r\n\r\ninterface Props {\r\n    balance: number;\r\n}\r\n\r\nfunction SocialLinks(props: Props) {\r\n\r\n    useEffect(() => { }, [])\r\n\r\n    return (\r\n        <>\r\n            <div className='icon-box'>\r\n                <a href=\"https://twitter.com/TheNerdQuarters\" className='icon-box-sm twitter'><FontAwesomeIcon icon={icons.twitter} /></a>\r\n            </div>\r\n            <div className='icon-box'>\r\n                <a href=\"https://discord.com/invite/CRAd5m\" className='icon-box-sm discord'><FontAwesomeIcon icon={icons.discord} /></a>\r\n            </div>\r\n            <div className='icon-box'>\r\n                <a href=\"https://info.uniswap.org/pair/0x2e231cbf03ea19f8a5bed1c053e678729703d0ba\" className='icon-box-sm'><img src={Uniswap} /></a>\r\n            </div>\r\n            <div className='icon-box'>\r\n                <a href=\"https://dapp.dfohub.com/?addr=0xfD344335b239d7864c83c7613FF7c228dF5F3e88\" className='icon-box-sm dfo'><img src={DFO} /></a>\r\n            </div>\r\n            {\r\n                props.balance && props.balance >= 1\r\n                    ?\r\n                    <>\r\n                        <div className='icon-box'>\r\n                            <a href=\"https://t.me/joinchat/SM6jvB0FNmlz2t_KX8uYDg\" className='icon-box-sm uniswap'><FontAwesomeIcon icon={icons.telegram} /></a>\r\n                        </div>\r\n                    </>\r\n                    :\r\n                    <></>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SocialLinks\r\n","import React, { useEffect } from 'react'\r\n\r\ninterface Props {}\r\n\r\nfunction Footer(props: Props) {\r\n\r\n    useEffect(() => { }, [])\r\n\r\n    const getCurrentYear = () => {\r\n        let year = new Date();\r\n        return year.getFullYear()\r\n    }\r\n\r\n    return (\r\n        <>\r\n          <span>&copy; Copyright {getCurrentYear()} Nerd Finance. All rights reserved. Nerd is a Decentralized Flexible Organization. <a href=\"https://dapp.dfohub.com/?addr=0xfD344335b239d7864c83c7613FF7c228dF5F3e88\">Go to DFO Hub</a></span>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React, { useEffect, useState } from 'react';\r\n// Components\r\nimport { connect } from 'react-redux';\r\nimport Table from '../../components/Table/Table/Table';\r\nimport Uploader from '../../components/Utils/Uploader/Uploader';\r\n// Helpers\r\nimport { getTokenList } from '../../actions/Global';\r\nimport { tableHeader } from './HomeHelper';\r\nimport { connectWeb3, getChainID, balanceOf, getAccounts } from '../../providers/web3';\r\nimport moment from \"moment\";\r\nimport Logo from '../../assets/images/nerd-finance-logo.svg'\r\nimport Image from '../../components/Utils/Image/Image';\r\nimport Button from '../../components/Utils/Button/Button';\r\nimport Modal from '../../components/CustomModal/CustomModal';\r\nimport SocialLinks from '../../components/SocialLinks/SocialLinks';\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport Footer from '../../components/Footer/Footer';\r\n\r\ninterface Props {\r\n    globalReducer: any,\r\n    getTokenList: Function\r\n}\r\n\r\nfunction Home(props: Props) {\r\n    const [balance, setBalance] = useState(0)\r\n    const [modal, showModal] = useState(false);\r\n    const [connected, setConnection] = useState(false);\r\n    const [errorUploader, setUploaderError] = useState([]);\r\n    const [maxNerd] = useState(100);\r\n\r\n    useEffect(() => {\r\n        // Get tokenlist\r\n        props.getTokenList();\r\n        // if connected set balance\r\n        checkConnected()\r\n        console.log('errorUploader', errorUploader)\r\n    }, [connected, balance, errorUploader])\r\n\r\n    const checkConnected = () => {\r\n        getAccounts((account: any) => {\r\n            if (account.length > 0) {\r\n                setConnection(true)\r\n                getChainID(0, (chain: any) => {\r\n                    balanceOf(chain, (balance: any) => {\r\n                        setBalance(balance)\r\n                    })\r\n                })\r\n            } else {\r\n                setConnection(false)\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div id='content-wrapper'>\r\n                <div id='modal-wrap'>\r\n                    {!connected}\r\n                    <Modal\r\n                        title={!connected && !balance ? 'Connecting to wallet' : balance >= maxNerd && connected ? \"Congratulations, we found some $NERD in your wallet\" : \"Sorry, we haven't found enough $NERD in your wallet\"}\r\n                        description={!connected && !balance ? 'Please ensure you are logged in to your favorite Web3 wallet...' : balance >= maxNerd && connected ? 'You can now upload a new token list and you have also unlocked the' : balance < maxNerd && connected ? 'To access the token list upload function you need to have at least 1 $NERD token in your wallet.' : ''}\r\n                        btnText={!connected && !balance ? 'Close' : 'Close'}\r\n                        showTelegramText={balance >= maxNerd && connected ? true : false}\r\n                        showBuyButton={balance >= maxNerd || !connected ? false : true}\r\n                        extraBtnClass={balance >= maxNerd || !connected ? true : false}\r\n                        showBuyButtonText='Buy on Uniswap'\r\n                        show={modal}\r\n                        onClose={() => showModal(false)}\r\n                        showSpinner={!connected && !balance ? true : false}\r\n                    />\r\n                </div>\r\n                <div id='header'>\r\n                    <div className='logo-main'>\r\n                        <Image src={Logo} alt='Nerd Finance Logo' />\r\n                    </div>\r\n                    <div className='header-content'>\r\n                        <span className='date-time mobile'>Last updated: {moment(props.globalReducer.tokenList.timestamp).format('LLL')}</span>\r\n                        {connected && balance >= maxNerd\r\n                            ?\r\n                            <Uploader accept='.json' buttonClass='button' buttonTxt='Upload a tokenlist' onError={(error: any) => setUploaderError(error)} />\r\n                            : balance < maxNerd && connected ?\r\n                                <Button className='button' onClick={() => showModal(true)}>\r\n                                    Not enough $NERD\r\n                                </Button>\r\n                                :\r\n                                <Button className='button' onClick={() => {\r\n                                    showModal(true);\r\n                                    connectWeb3(() => {\r\n                                        // Get logged in chain ID;\r\n                                        getChainID(0, (chain: any) => {\r\n                                            balanceOf(chain, (balance: any) => {\r\n                                                setBalance(balance)\r\n                                            })\r\n                                        })\r\n                                    });\r\n                                }}>\r\n                                    Connect to wallet\r\n                            </Button>}\r\n                    </div>\r\n                </div>\r\n                {/* Uploader error if error occurs */}\r\n                {errorUploader.length > 0 ?\r\n                    <div id='error-wrapper'>\r\n                        <div className='error-box'>\r\n                            {errorUploader.map((error: any, key: any) => {\r\n                                return <span key={key} className='error-uploader'>{error} <div>&nbsp; / &nbsp;</div></span>\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                    :\r\n                    <></>\r\n                }\r\n                <div id='table-wrapper'>\r\n                    <div className='main-table'>\r\n                        <Table header={tableHeader} tokens={props.globalReducer.tokens} />\r\n                    </div>\r\n                </div>\r\n                <div id=\"social-media\">\r\n                    <SocialLinks balance={balance} />\r\n                </div>\r\n                <div id=\"footer\">\r\n                    <Footer />\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n    globalReducer: state.globalReducer\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Function) => {\r\n    return {\r\n        getTokenList: () => dispatch(getTokenList())\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)\r\n","export const HANDLE_LIST = \"HANDLE_LIST\";\r\nexport const HANDLE_TOKEN_LIST = \"HANDLE_TOKEN_LIST\";\r\n\r\nexport function getTokenList() {\r\n    return async (dispatch: Function, getState: any) => {\r\n        try {\r\n            const url = process.env.REACT_APP_PLAY + 'token_list.json'\r\n            const res = await fetch(url);\r\n            const json = await res.json();\r\n\r\n            dispatch({ type: HANDLE_LIST, payload: { tokenList: json } });\r\n            dispatch({ type: HANDLE_TOKEN_LIST, payload: { tokens: json.tokens } });\r\n        }\r\n        catch (err) {\r\n            console.log('err', err)\r\n        }\r\n    }\r\n}\r\n","import React from 'react';\r\n// @Custom imports\r\nimport {Switch, Route} from 'react-router-dom';\r\nimport './Main.scss';\r\n// Containers\r\nimport Home from '../Home/Home';\r\n\r\ninterface Props { }\r\n\r\nfunction Main(props: Props) {\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Switch>\r\n                <Route path=\"/\" render={(props) => <Home {...props} key=''/>}/>\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main\r\n","import { createMemoryHistory } from \"history\";\r\n\r\nexport default createMemoryHistory()","import { HANDLE_LIST, HANDLE_TOKEN_LIST } from '../actions/Global';\r\n\r\nconst initialState: any = {\r\n    tokenList: [],\r\n    tokens: []\r\n}\r\n\r\nexport default function globalReducer(state = initialState, action: any) {\r\n    let changes;\r\n    switch (action.type) {\r\n        case HANDLE_LIST:\r\n            changes = {\r\n                ...state,\r\n                ...action.payload\r\n            };\r\n            return changes;\r\n        case HANDLE_TOKEN_LIST:\r\n            changes = {\r\n                ...state,\r\n                ...action.payload\r\n            };\r\n            return changes;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n// @Redux\r\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension' // DISABLE THIS IN PRODUCTION MODE\r\nimport ReduxThunk from 'redux-thunk';\r\n// @Containers\r\nimport Main from './containers/Main/Main';\r\n// @Custom imports\r\nimport { Router } from 'react-router-dom';\r\nimport History from './helpers/History';\r\nimport globalReducer from './reducers/Global';\r\n\r\nconst middleware = [ReduxThunk];\r\n\r\nconst allReducers = combineReducers({\r\n    globalReducer: globalReducer\r\n});\r\n\r\nconst store = createStore(allReducers, composeWithDevTools(applyMiddleware(...middleware)));\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <Router history={History}>\r\n            <Main />\r\n        </Router>\r\n    </Provider>\r\n    , document.getElementById('root'));"],"sourceRoot":""}